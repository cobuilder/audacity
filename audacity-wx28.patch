--- audacity-src-1.3.2-beta/src/LabelDialog.cpp	2006/09/23 02:28:04	1.8
+++ audacity-src-1.3.2-beta/src/LabelDialog.cpp	2006/11/18 05:16:41	1.9
@@ -736,3 +736,21 @@
 
    return;
 }
+
+void LabelDialog::OnOK(wxCommandEvent &event)
+{
+   // Standard handling
+   if (Validate() && TransferDataFromWindow()) {
+      EndModal(wxID_OK);
+   }
+
+   return;
+}
+
+void LabelDialog::OnCancel(wxCommandEvent &event)
+{
+   // Standard handling
+   EndModal(wxID_CANCEL);
+
+   return;
+}
--- audacity-src-1.3.2-beta/src/LabelDialog.h	2006/09/17 08:23:44	1.5
+++ audacity-src-1.3.2-beta/src/LabelDialog.h	2006/11/18 05:16:41	1.6
@@ -59,6 +59,8 @@
    void OnChangeLabel(wxGridEvent &event, int row, RowData *rd);
    void OnChangeStime(wxGridEvent &event, int row, RowData *rd);
    void OnChangeEtime(wxGridEvent &event, int row, RowData *rd);
+   void OnOK(wxCommandEvent &event);
+   void OnCancel(wxCommandEvent &event);
 
  private:
 
--- audacity-src-1.3.2-beta/src/FileFormats.h.orig	2006-12-24 11:41:23.000000000 +0000
+++ audacity-src-1.3.2-beta/src/FileFormats.h	2006-12-24 11:41:45.000000000 +0000
@@ -10,6 +10,7 @@
 
 #include <wx/list.h>
 #include <wx/string.h>
+#include <wx/arrstr.h>
 
 #include "Audacity.h"
 
--- audacity-src-1.3.2-beta/src/Languages.h.orig	2006-12-24 12:23:15.000000000 +0000
+++ audacity-src-1.3.2-beta/src/Languages.h	2006-12-24 12:23:39.000000000 +0000
@@ -11,6 +11,7 @@
 #ifndef __AUDACITY_LANGUAGES__
 #define __AUDACITY_LANGUAGES__
 
+#include <wx/arrstr.h>
 #include <wx/string.h>
 #include <wx/list.h>
 
--- audacity-src-1.3.2-beta/src/ShuttleGui.cpp.orig	2006-12-24 12:46:44.000000000 +0000
+++ audacity-src-1.3.2-beta/src/ShuttleGui.cpp	2006-12-24 12:47:51.000000000 +0000
@@ -98,6 +98,7 @@
 #include <wx/wx.h>
 #include <wx/wxprec.h>
 #include <wx/listctrl.h>
+#include <wx/notebook.h>
 #include <wx/treectrl.h>
 #include "Internat.h"
 #include "Experimental.h"
--- audacity-src-1.3.2-beta/src/commands/Keyboard.cpp	2006/04/17 23:10:36	1.7
+++ audacity-src-1.3.2-beta/src/commands/Keyboard.cpp	2006/11/18 05:43:24	1.8
@@ -66,12 +66,14 @@
       case WXK_RETURN:
          newStr += wxT("Return");
          break;
+#if !wxCHECK_VERSION(2, 7, 0)
       case WXK_PRIOR:
          newStr += wxT("PageUp");
          break;
       case WXK_NEXT:
          newStr += wxT("PageDown");
          break;
+#endif
       case WXK_END:
          newStr += wxT("End");
          break;
@@ -246,15 +248,17 @@
       case WXK_NUMPAD_DOWN:
          newStr += wxT("NUMPAD_DOWN");
          break;
+#if !wxCHECK_VERSION(2, 7, 0)
       case WXK_NUMPAD_PRIOR:
          newStr += wxT("NUMPAD_PAGEUP");
          break;
-      case WXK_NUMPAD_PAGEUP:
-         newStr += wxT("NUMPAD_PAGEUP");
-         break;
       case WXK_NUMPAD_NEXT:
          newStr += wxT("NUMPAD_PAGEDOWN");
          break;
+#endif
+      case WXK_NUMPAD_PAGEUP:
+         newStr += wxT("NUMPAD_PAGEUP");
+         break;
       case WXK_NUMPAD_PAGEDOWN:
          newStr += wxT("NUMPAD_PAGEDOWN");
          break;
--- audacity-src-1.3.2-beta/src/export/Export.h.orig	2006-12-24 14:05:10.000000000 +0000
+++ audacity-src-1.3.2-beta/src/export/Export.h	2006-12-24 14:05:30.000000000 +0000
@@ -11,6 +11,7 @@
 #ifndef __AUDACITY_EXPORT__
 #define __AUDACITY_EXPORT__
 
+#include <wx/panel.h>
 #include <wx/stattext.h>
 
 class AudacityProject;
--- audacity-src-1.3.2-beta/src/import/Import.h.orig	2006-12-24 14:24:40.000000000 +0000
+++ audacity-src-1.3.2-beta/src/import/Import.h	2006-12-24 14:25:40.000000000 +0000
@@ -11,6 +11,7 @@
 #ifndef _IMPORT_
 #define _IMPORT_
 
+#include <wx/arrstr.h>
 #include <wx/string.h>
 #include <wx/list.h>
 #include <wx/listimpl.cpp>
--- audacity-src-1.3.2-beta/src/toolbars/ControlToolBar.cpp.orig	2006-12-24 16:07:47.000000000 +0000
+++ audacity-src-1.3.2-beta/src/toolbars/ControlToolBar.cpp	2006-12-24 16:08:17.000000000 +0000
@@ -159,7 +159,7 @@
    wxImage * down2      = OverlayImage(bmpRecoloredDownLarge,   bmpLoop, xoff + 1, yoff + 1);
    wxImage * disable2   = OverlayImage(bmpRecoloredUpLarge,     bmpLoopDisabled, xoff, yoff);
 
-   mPlay->SetAlternateImages(up2, hilite2, down2, disable2);
+   mPlay->SetAlternateImages(*up2, *hilite2, *down2, *disable2);
 
    delete up2;
    delete hilite2;
--- audacity-src-1.3.2-beta/src/toolbars/ToolBar.cpp.orig	2006-12-24 16:12:42.000000000 +0000
+++ audacity-src-1.3.2-beta/src/toolbars/ToolBar.cpp	2006-12-24 16:13:54.000000000 +0000
@@ -34,6 +34,7 @@
 #include <wx/gdicmn.h>
 #include <wx/image.h>
 #include <wx/intl.h>
+#include <wx/settings.h>
 #include <wx/sizer.h>
 #include <wx/sysopt.h>
 #include <wx/window.h>
@@ -442,8 +443,8 @@
    wxImage * disable2   = OverlayImage(eUp,     eDisabled, xoff, yoff);
 
    AButton * button =
-      new AButton(this, id, placement, size, up2, hilite2, down2,
-            disable2, processdownevents);
+      new AButton(this, id, placement, size, *up2, *hilite2, *down2,
+            *disable2, processdownevents);
 
    delete up2;
    delete down2;
--- audacity-src-1.3.2-beta/src/Makefile.in.orig	2006-12-24 16:22:08.000000000 +0000
+++ audacity-src-1.3.2-beta/src/Makefile.in	2006-12-24 16:22:12.000000000 +0000
@@ -167,7 +167,6 @@
    toolbars/ToolManager.o \
    toolbars/ToolsToolBar.o \
    toolbars/TranscriptionToolBar.o \
-	widgets/treebook.o \
 	widgets/AButton.o \
 	widgets/ASlider.o \
 	widgets/AttachableScrollBar.o \
--- audacity-src-1.3.2-beta/configure.in.orig	2006-12-24 16:25:37.000000000 +0000
+++ audacity-src-1.3.2-beta/configure.in	2006-12-24 16:25:58.000000000 +0000
@@ -316,19 +316,19 @@
    AC_MSG_ERROR("Could not find wx-config: is wxWindows installed? is wx-config in your path?")
 fi
 
-dnl Check that the wx version is 2.6.x
+dnl Check that the wx version is 2.8.x
 
 wx_version=`${WX_CONFIG} $static_preference $unicode_preference --version`
 
-AC_MSG_NOTICE([Checking that the installed version of wxWidgets is 2.6.x])
+AC_MSG_NOTICE([Checking that the installed version of wxWidgets is 2.8.x])
 
 case "${wx_version}" in
-  2.6.*)
-    echo "Great, you're using wxWidgets 2.6.x!"
+  2.8.*)
+    echo "Great, you're using wxWidgets 2.8.x!"
     ;;
   *)
   wx_list=`${WX_CONFIG} --list`
-  AC_MSG_ERROR([Unable to locate a suitable configuration of wxWidgets v2.6.x.
+  AC_MSG_ERROR([Unable to locate a suitable configuration of wxWidgets v2.8.x.
 The currently available configurations are listed below.  If necessary, either
 install the package for your distribution or download the latest version of wxWidgets
 from http://wxwidgets.org.
--- audacity-src-1.3.2-beta/src/TrackArtist.cpp.orig	2006-12-24 17:05:46.000000000 +0000
+++ audacity-src-1.3.2-beta/src/TrackArtist.cpp	2006-12-24 22:31:32.000000000 +0000
@@ -1451,7 +1451,7 @@
    // screen, so remember the display rectangle.
    clip->SetDisplayRect(mid);
 
-   wxBitmap converted = wxBitmap(image);
+   wxBitmap converted = wxBitmap(*image);
 
    wxMemoryDC memDC;
 
--- audacity-src-1.3.2-beta/src/prefs/PrefsDialog.cpp.orig	2006-12-24 23:15:42.000000000 +0000
+++ audacity-src-1.3.2-beta/src/prefs/PrefsDialog.cpp	2006-12-24 23:16:03.000000000 +0000
@@ -31,6 +31,7 @@
 #include <wx/listbook.h>
 #include <wx/listctrl.h>
 #include <wx/sizer.h>
+#include "wx/treebook.h"
 
 #include "../Project.h"
 
@@ -50,8 +51,6 @@
 #include "SpectrumPrefs.h"
 #include "MousePrefs.h"
 
-//JKC: Experimental treebook, backported from wxWidgets 2.7.x
-#include "../widgets/treebook.h"
 
 
 enum {
--- audacity-src-1.3.2-beta/src/widgets/ASlider.cpp	2006/11/05 07:41:53	1.52
+++ audacity-src-1.3.2-beta/src/widgets/ASlider.cpp	2006/11/18 07:45:29	1.54
@@ -742,13 +742,17 @@
       break;
 
       case WXK_PAGEUP:
+#if !wxCHECK_VERSION(2,7,0)
       case WXK_PRIOR:
+#endif
          Increase( 5 );
          SendUpdate( mCurrentValue );
       break;
 
       case WXK_PAGEDOWN:
+#if !wxCHECK_VERSION(2,7,0)
       case WXK_NEXT:
+#endif
          Decrease( 5 );
          SendUpdate( mCurrentValue );
       break;
@@ -775,11 +779,12 @@
       case WXK_RETURN:
       case WXK_NUMPAD_ENTER:
       {
-         wxWindow *def = mParent->GetParent()->GetDefaultItem();
-         if (def) {
+         wxTopLevelWindow *tlw = wxDynamicCast(wxGetTopLevelParent(mParent), wxTopLevelWindow);
+         wxWindow *def = tlw->GetDefaultItem();
+         if (def && def->IsEnabled()) {
             wxCommandEvent cevent(wxEVT_COMMAND_BUTTON_CLICKED,
                                   def->GetId());
-            mParent->ProcessEvent( cevent );
+            mParent->ProcessEvent(cevent);
          }
       }
 
--- audacity-src-1.3.2-beta/src/widgets/Ruler.cpp.orig	2006-12-25 00:59:27.000000000 +0000
+++ audacity-src-1.3.2-beta/src/widgets/Ruler.cpp	2006-12-25 01:00:41.000000000 +0000
@@ -60,6 +60,7 @@
 #include <wx/dcscreen.h>
 #include <wx/dcmemory.h>
 #include <wx/dcbuffer.h>
+#include <wx/settings.h>
 
 #include "../Internat.h"
 #include "../Project.h"
--- audacity-src-1.3.2-beta/src/widgets/TimeTextCtrl.cpp.orig	2006-12-25 01:06:26.000000000 +0000
+++ audacity-src-1.3.2-beta/src/widgets/TimeTextCtrl.cpp	2006-12-25 01:09:55.000000000 +0000
@@ -166,6 +166,7 @@
 #include <wx/sizer.h>
 #include <wx/stattext.h>
 #include <wx/tooltip.h>
+#include <wx/toplevel.h>
 
 #define ID_MENU 9800
 
@@ -981,7 +982,9 @@
 
    else if (keyCode == WXK_RETURN || keyCode == WXK_NUMPAD_ENTER) {
       wxWindow *parent = GetParent();
-      wxWindow *def = parent->GetDefaultItem();
+      wxTopLevelWindow *tlw =
+         wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
+      wxWindow *def = tlw->GetDefaultItem();
       if (def && def->IsEnabled()) {
          wxCommandEvent cevent(wxEVT_COMMAND_BUTTON_CLICKED,
                                def->GetId());
--- audacity-src-1.3.2-beta/src/FileNames.cpp	2006/10/01 07:23:49	1.9
+++ audacity-src-1.3.2-beta/src/FileNames.cpp	2006/11/19 02:20:14	1.10
@@ -72,8 +72,8 @@
       // If there is a directory "Portable Settings" relative to the
       // executable's EXE file, the prefs are stored in there, otherwise
       // the prefs are stored in the user data dir provided by the OS.
-      wxFileName exePath(PlatformCompatibility::GetExecutablePath());
-      wxFileName portablePrefsPath(exePath.GetPath(), wxT("Portable Settings"));
+      wxFileName portablePrefsPath(PlatformCompatibility::GetExecutablePath());
+      portablePrefsPath.AppendDir(wxT("Portable Settings"));
       
       if (portablePrefsPath.DirExists())
       {
